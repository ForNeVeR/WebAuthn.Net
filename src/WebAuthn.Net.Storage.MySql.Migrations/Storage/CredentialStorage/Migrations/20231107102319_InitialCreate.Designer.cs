// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAuthn.Net.Storage.MySql.Migrations.Storage.CredentialStorage;

#nullable disable

namespace WebAuthn.Net.Storage.MySql.Migrations.Storage.CredentialStorage.Migrations
{
    [DbContext(typeof(MySqlCredentialStorageDbContext))]
    [Migration("20231107102319_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.UseCollation(modelBuilder, null, DelegationModes.ApplyToDatabases);

            modelBuilder.Entity("WebAuthn.Net.Storage.MySql.Migrations.Storage.CredentialStorage.Models.MySqlUserCredentialRecord", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("binary(16)")
                        .IsFixedLength();

                    b.Property<int>("Alg")
                        .HasColumnType("int");

                    b.Property<byte[]>("AttestationClientDataJson")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("AttestationObject")
                        .HasColumnType("longblob");

                    b.Property<bool>("BackupEligible")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BackupState")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("CreatedAtUnixTime")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("CredentialId")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varbinary(1024)");

                    b.Property<int?>("EcdsaCrv")
                        .HasColumnType("int");

                    b.Property<byte[]>("EcdsaX")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)");

                    b.Property<byte[]>("EcdsaY")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)");

                    b.Property<int>("Kty")
                        .HasColumnType("int");

                    b.Property<string>("RpId")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<byte[]>("RsaExponentE")
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)");

                    b.Property<byte[]>("RsaModulusN")
                        .HasMaxLength(1024)
                        .HasColumnType("varbinary(1024)");

                    b.Property<uint>("SignCount")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Transports")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserHandle")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varbinary(300)");

                    b.Property<bool>("UvInitialized")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("RpId", "UserHandle");

                    b.HasIndex("RpId", "UserHandle", "CredentialId")
                        .IsUnique();

                    b.ToTable("CredentialRecords");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb4", DelegationModes.ApplyToTables);
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_0900_ai_ci", DelegationModes.ApplyToTables);
                });
#pragma warning restore 612, 618
        }
    }
}
